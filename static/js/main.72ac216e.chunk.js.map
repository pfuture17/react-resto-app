{"version":3,"sources":["components/Items.js","components/Cart.js","components/Form.js","App.js","reportWebVitals.js","redux/reducer.js","redux/store.js","index.js"],"names":["connect","dispatch","addToCart","item","type","payload","deleteItem","className","src","image","alt","name","width","price","onClick","window","confirm","addQuantity","subQuantity","quantity","addNewItem","itemName","itemPrice","itemCategory","itemImage","category","useState","errorMessage","setNewErrorMessage","setNewItemName","setNewItemPrice","setNewItemCategory","setNewItemImage","value","onChange","e","target","placeholder","state","items","cart","total","selectedCategory","setNewSelectedCategory","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","id","solveTotal","cartCopy","cartItem","subtotal","reducer","action","exist","push","cloneDeep","filter","console","log","uuidv4","itemsCopy","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72ac216e.chunk.js","sourcesContent":["import { connect } from 'react-redux'\r\nimport './Items.css'\r\n\r\nconst Items = ({item, addToCart, deleteItem}) => {\r\n    return (\r\n        <div className='itemBox'>\r\n            <img className='itemImg' src={item.image} alt={item.name} width={50}/>\r\n            <strong>{item.name}</strong>\r\n            <p><small>₱ {item.price}</small></p>\r\n            <button className='menuBtn' onClick={() => addToCart(item)}> Order </button>\r\n            <span className='x' onClick={() => {  if (window.confirm('Are you sure you wish to delete this item?')){deleteItem(item)}}}> x </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addToCart: (item) => dispatch({type:'ADD_CART', payload: item}),\r\n        deleteItem:(item) => dispatch({type:'DELETE_ITEM', payload: item})\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Items)","import { connect } from 'react-redux'\r\nimport './Cart.css'\r\n\r\n\r\nconst Cart = ({item, addQuantity, subQuantity}) => {\r\n\r\n    return (\r\n        <div className=\"cartBox\">\r\n            <img className='cartImg' src={item.image} alt={item.name} width={100}/>\r\n            <strong>{item.name}</strong>\r\n            <p><small>₱ {item.price}</small></p>\r\n            <div className=\"buttons\">\r\n                <button className='cartBtn' onClick={()=>{subQuantity(item)}}> - </button><small>Qty: {item.quantity}</small><button className='cartBtn' onClick={()=>{addQuantity(item)}}>+</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addQuantity : (item) => dispatch({type:'ADD_QUANTITY', payload: item}),\r\n        subQuantity : (item) => dispatch({type:'SUB_QUANTITY', payload: item})\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Cart)\r\n","import React from 'react'\r\nimport { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport './Forms.css'\r\n\r\n\r\nconst Form = ({ addNewItem }) => {\r\n    const [errorMessage, setNewErrorMessage] = useState('')\r\n    const [itemName, setNewItemName] = useState('')\r\n    const [itemPrice, setNewItemPrice] = useState('')\r\n    const [itemCategory, setNewItemCategory] = useState('')\r\n    const [itemImage, setNewItemImage] = useState('')\r\n\r\n    const itemNameChangeHandler = (e) => {\r\n        setNewItemName(e.target.value)\r\n    }\r\n    const itemPriceChangeHandler = (e) => {\r\n        setNewItemPrice(e.target.value)\r\n    }\r\n    const itemCategoryChangeHandler = (e) => {\r\n        setNewItemCategory(e.target.value)\r\n    }\r\n    const itemImageChangeHandler = (e) => {\r\n        setNewItemImage(e.target.value)\r\n    }\r\n\r\n    const test = () => {\r\n        if(itemName === '' || itemPrice === '' || itemImage === ''){\r\n            setNewErrorMessage('ERROR! fields cannot be blank!')\r\n        } else if(itemCategory === '') {\r\n            setNewErrorMessage('ERROR! Please select a category!')\r\n        } else {\r\n            addNewItem(itemName,itemPrice,itemCategory,itemImage);  \r\n            setNewErrorMessage('');\r\n            setNewItemName('');\r\n            setNewItemImage('');\r\n            setNewItemPrice('');\r\n        }\r\n    }\r\n   \r\n    return (\r\n        <div className=\"form\">\r\n            <form>\r\n                <span className='error'>\r\n                    {errorMessage} <br />\r\n                </span>\r\n                <span>Name:</span> <input value= {itemName}\r\n                             type=\"text\"\r\n                             onChange={itemNameChangeHandler}\r\n                             placeholder=\"Enter Name\"/> <br/>\r\n\r\n                <span>Price:</span> <input type=\"number\"\r\n                              value={itemPrice}\r\n                              onChange={itemPriceChangeHandler}\r\n                              placeholder=\"Enter Price\"/> <br/>\r\n                category: <select onChange={itemCategoryChangeHandler}> \r\n                        <option value=''>Select Category</option>\r\n                        <option value=\"Food\">Food</option>\r\n                        <option value=\"Drink\">Drink</option>\r\n                        <option value=\"Dessert\">Dessert</option>\r\n                </select><br/>\r\n                <span>Image:</span> <input type=\"url\"\r\n                              value={itemImage}\r\n                              onChange={itemImageChangeHandler}\r\n                              placeholder=\"Image url\"/><br/>\r\n                <button className='submitBtn' type=\"button\" onClick={test}>Add Item</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addNewItem: (itemName,itemPrice,itemCategory,itemImage) => dispatch({type:'ADD_NEW_ITEM', payload: {name: itemName, price: itemPrice, category: itemCategory, image: itemImage}}),\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Form)","import { connect } from 'react-redux'\nimport { useState } from 'react';\nimport Items from './components/Items'\nimport Cart from './components/Cart';\nimport Form from './components/Form'\nimport './App.css'\n\n\nconst App = ({ items, cart, total }) => {\n  const [selectedCategory, setNewSelectedCategory] = useState('');\n\n  const selectedCategoryChangeHandler = (e) => {\n    setNewSelectedCategory(e.target.value)\n  }\n\n  return (\n      <div className=\"App\">\n        <div className=\"app-container\">\n          <header>\n            <h2>RESTAURANT APP</h2>\n          </header>\n          <div className=\"container\">\n            <div className=\"form-container\">\n              <Form/>\n            </div>\n            <div className=\"body\">\n              <div className=\"menu\">\n                <h3>Our Menu</h3>\n                <select onChange={selectedCategoryChangeHandler} >\n                  <option value=\"\">Select Category</option>\n                  <option value=\"All\">All</option>\n                  <option value=\"Food\">Foods</option>\n                  <option value=\"Drink\">Drinks</option>\n                  <option value=\"Dessert\">Desserts</option>\n                </select>\n                <div className=\"items\">\n                  {\n                    items.map ( item => {\n                      if(item.category === selectedCategory || selectedCategory === 'All') {\n                        return <Items item={item}/>\n                      }\n                    })\n                  }\n                </div>\n              </div>\n              <div className=\"cart\">\n                <h3>Cart</h3>\n                {\n                  cart.map (item => {\n                    return <Cart item={item}/>\n                  })\n                }\n                <h3>TOTAL: ₱{total}</h3>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    items: state.items,\n    cart: state.cart,\n    total: state.total\n  }\n}\n\nexport default connect (mapStateToProps)(App)\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { cloneDeep } from \"lodash\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\n\r\nconst initialState = {\r\n    items: [\r\n        {\r\n            id: 1,\r\n            name: \"Burger\", \r\n            price: 50, \r\n            category: \"Food\",\r\n            image: \"https://image.flaticon.com/icons/svg/1046/1046784.svg\"\r\n        },\r\n        {\r\n          id: 2,\r\n            name: \"Pizza\", \r\n            price: 100, \r\n            category: \"Food\",\r\n            image: \"https://image.flaticon.com/icons/svg/1046/1046771.svg\"\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Fries\", \r\n            price: 25, \r\n            category: \"Food\",\r\n            image: \"https://image.flaticon.com/icons/svg/1046/1046786.svg\"\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"Coffee\", \r\n            price: 35, \r\n            category: \"Drink\",\r\n            image: \"https://image.flaticon.com/icons/svg/1046/1046785.svg\"\r\n        },\r\n        {\r\n          id: 5,\r\n            name: \"Iced Tea\", \r\n            price: 45, \r\n            category: \"Drink\",\r\n            image: \"https://image.flaticon.com/icons/svg/1046/1046782.svg\"\r\n        },\r\n        {\r\n            id: 6,\r\n            name: \"Hot Tea\", \r\n            price: 45, \r\n            category: \"Drink\",\r\n            image: \"https://image.flaticon.com/icons/svg/1046/1046792.svg\"\r\n        },\r\n      ],\r\n    cart: [],\r\n    total: 0\r\n}\r\n\r\n\r\n\r\nconst solveTotal = (cartCopy) => {\r\n    let total = 0;\r\n    cartCopy.map( cartItem => {\r\n      cartItem.subtotal = cartItem.price * cartItem.quantity \r\n      total += cartItem.subtotal; \r\n    });\r\n    return total;\r\n}\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    let cartCopy;\r\n    let item;\r\n    let total;\r\n    switch(action.type) {\r\n        case 'ADD_CART':\r\n            let exist = false;\r\n            item = action.payload\r\n            cartCopy = [...state.cart]\r\n            cartCopy.map(cartItem => {\r\n                if(cartItem.id === item.id) {\r\n                    cartItem.quantity++\r\n                    exist =true;\r\n                }\r\n            })\r\n            if (exist === false) {\r\n                cartCopy.push(item)\r\n                item.quantity = 1;\r\n            }\r\n\r\n            total = solveTotal(cartCopy);\r\n        \r\n            return{\r\n                ...state,\r\n                cart: cloneDeep(cartCopy),\r\n                total: total\r\n            }\r\n        case 'ADD_QUANTITY':\r\n            item = action.payload;\r\n            cartCopy = [...state.cart]\r\n            if(cartCopy){\r\n                item.quantity += 1;\r\n            }\r\n            total = solveTotal(cartCopy);\r\n            return {\r\n                ...state,\r\n                cart: cloneDeep(cartCopy),\r\n                total: total\r\n            }\r\n        case 'SUB_QUANTITY':\r\n            item = action.payload;\r\n            cartCopy = [...state.cart]\r\n            if(cartCopy){\r\n                item.quantity--;\r\n            }\r\n            if(item.quantity === 0) {\r\n                cartCopy = cartCopy.filter( cartItem => {\r\n                    return (cartItem.id !== item.id)\r\n                })\r\n            }\r\n\r\n            total = solveTotal(cartCopy);\r\n            return {\r\n                ...state,\r\n                cart: cloneDeep(cartCopy),\r\n                total: total\r\n            }\r\n        case 'ADD_NEW_ITEM':\r\n            console.log(action.payload.category);\r\n            cartCopy = [...state.items];\r\n            cartCopy.push({\r\n                name: action.payload.name,\r\n                price: action.payload.price,\r\n                category: action.payload.category,\r\n                image: action.payload.image,\r\n                id: uuidv4()\r\n            })\r\n            return {\r\n                ...state,\r\n                items: cloneDeep(cartCopy),\r\n            }\r\n        case 'DELETE_ITEM':\r\n            let itemsCopy = [...state.items];\r\n            itemsCopy = itemsCopy.filter( item => {\r\n                return item.id !== action.payload.id\r\n            })\r\n            return {\r\n                ...state,\r\n                items:itemsCopy\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer","import { createStore } from 'redux';\r\nimport reducer from './reducer'\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n   <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}